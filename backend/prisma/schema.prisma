generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Academy {
  id        Int      @id @default(autoincrement())
  title     String
  logoUrl   String
  admins    User[]   @relation("AcademyAdmins")
  createdAt DateTime @default(now())
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  role       Role
  academyId  Int?
  academy    Academy? @relation(fields: [academyId], references: [id])
  students   User[]   @relation("TeacherStudents")
  teachers   User[]   @relation("TeacherStudents", references: [id])
  parentOf   User[]   @relation("ParentStudents")
  parents    User[]   @relation("ParentStudents", references: [id])
  subjects   Subject[] @relation("StudentSubjects")
  teaching   Subject[] @relation("TeacherSubjects")
  progress   Progress[]
  createdAt  DateTime @default(now())
}

model Subject {
  id         Int      @id @default(autoincrement())
  name       String
  academyId  Int
  academy    Academy  @relation(fields: [academyId], references: [id])
  teacherId  Int
  teacher    User     @relation("TeacherSubjects", fields: [teacherId], references: [id])
  students   User[]   @relation("StudentSubjects")
  progress   Progress[]
  createdAt  DateTime @default(now())
}

model Progress {
  id         Int      @id @default(autoincrement())
  studentId  Int
  subjectId  Int
  teacherId  Int
  text       String?
  percentage Int?
  createdAt  DateTime @default(now())
  student    User     @relation(fields: [studentId], references: [id])
  subject    Subject  @relation(fields: [subjectId], references: [id])
  teacher    User     @relation(fields: [teacherId], references: [id])
}

enum Role {
  DEVELOPER
  ADMIN
  TEACHER
  PARENT
  STUDENT
}
